include "../rew_type.zf".
rewrite[name "LabelAr2"] forall (O E E1 A B C : point). Ar2 O E E1 A B C <=> ~ Col O E E1 && Col O E A && Col O E B && Col O E C.
rewrite[name "LabelOut"] forall (P A B : point). Out P A B <=> A != P && B != P && (Bet P A B || Bet P B A).
rewrite[name "LabelSum4"] forall (O E E1 A B C D S: point). Sum4 O E E1 A B C D S <=> (exists (ABC : point). sum3 O E E1 A B C ABC && Sum O E E1 ABC D S).
#between_symmetry
assert[name "Labelbetween_symmetry"] forall (A B C : point). Bet A B C => Bet C B A.
#col_permutation_1
assert[name "Labelcol_permutation_1"] forall (A B C : point). Col A B C => Col B C A.
#col_permutation_5
assert[name "Labelcol_permutation_5"] forall (A B C : point). Col A B C => Col A C B.
#cong_identity
assert[name "Labelcong_identity"] forall (A B C : point). Cong A B C C => A = B.
#cong_symmetry
assert[name "Labelcong_symmetry"] forall (A B C D : point). Cong A B C D => Cong C D A B.
#cong_transitivity
assert[name "Labelcong_transitivity"] forall (A B C D E F : point). Cong A B C D => Cong C D E F => Cong A B E F.
#diff_uniqueness
assert[name "Labeldiff_uniqueness"] forall (O E E1 A B D1 D2 : point). Diff O E E1 A B D1 => Diff O E E1 A B D2 => D1=D2.
#eq_dec_points
assert[name "Labeleq_dec_points"] forall (A B : point). A=B || A!=B.
#l6_6
assert[name "Labell6_6"] forall (P A B : point). Out P A B => Out P B A.
#prod_assoc1
assert[name "Labelprod_assoc1"] forall (O E E1 A B C AB BC ABC : point). Prod O E E1 A B AB => Prod O E E1 B C BC => (Prod O E E1 A BC ABC => Prod O E E1 AB C ABC).
#prod_assoc2
assert[name "Labelprod_assoc2"] forall (O E E1 A B C AB BC ABC : point). Prod O E E1 A B AB => Prod O E E1 B C BC => (Prod O E E1 AB C ABC => Prod O E E1 A BC ABC).
#sum3_col
assert[name "Labelsum3_col"] forall (O E E1 A B C S : point). sum3 O E E1 A B C S => ~Col O E E1 && Col O E A && Col O E B && Col O E C && Col O E S.
#sum_ar2
assert[name "Labelsum_ar2"] forall (O E E1 A B C : point). Sum O E E1 A B C => Ar2 O E E1 A B C.
#sum_assoc_1
assert[name "Labelsum_assoc_1"] forall (O E E1 A B C AB BC ABC : point). Sum O E E1 A B AB => Sum O E E1 B C BC => Sum O E E1 A BC ABC => Sum O E E1 AB C ABC.
#sum_assoc_2
assert[name "Labelsum_assoc_2"] forall (O E E1 A B C AB BC ABC : point). Sum O E E1 A B AB => Sum O E E1 B C BC => Sum O E E1 AB C ABC => Sum O E E1 A BC ABC.
goal forall (O E E1 A B C A1 B1 C1 : point). Prod O E E1 A B C => Ar1 O E1 A1 B1 C1 => Pj E E1 A A1 => Pj E E1 B B1 => Pj E E1 C C1 => Prod O E1 E A1 B1 C1.